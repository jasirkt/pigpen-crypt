{"version":3,"sources":["components/LeftPane/styles.js","components/LeftPane/index.js","components/RightPane/styles.js","components/RightPane/index.js","components/Header/styles.js","components/Header/index.js","styles.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","borderRight","normalTextContainer","padding","LeftPane","props","classes","className","TextField","variant","value","onChange","event","target","fullWidth","buttonContainer","pigpenKey","fontFamily","border","minWidth","marginRight","marginBottom","pigpenTextContainer","pigpenTextInput","RightPane","map","alphabet","Button","onClick","letter","pigpenText","InputProps","input","flexGrow","title","appBar","alignItems","Header","AppBar","position","Toolbar","Typography","App","useState","text","setText","Grid","container","item","xs","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6b64d5f7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    borderRight: '1px solid black',\n  },\n  normalTextContainer: {\n    padding: '30px 60px 10px',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Select, MenuItem, TextField } from '@material-ui/core';\nimport useStyles from './styles';\n\nfunction LeftPane(props) {\n  const classes = useStyles();\n\n  const onTextChange = event => {\n    props.onChange(event.target.value);\n  }\n\n  return <div className={classes.root}>\n\n    <div className={classes.normalTextContainer}>\n      <TextField\n        variant=\"outlined\"\n        value={props.value}\n        onChange={onTextChange}\n        fullWidth/>\n    </div>\n  </div>;\n}\n\nexport default LeftPane;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  },\n  buttonContainer: {\n    padding: '30px 60px 10px',\n  },\n  pigpenKey: {\n    fontFamily: 'Pigpen Cipher',\n    border: '1px solid black',\n    padding: '5px 0px',\n    minWidth: '46px',\n    marginRight: '5px',\n    marginBottom: '5px',\n  },\n  pigpenTextContainer: {\n    padding: '30px 60px 10px',\n  },\n  pigpenTextInput: {\n    fontFamily: 'Pigpen Cipher',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport { Button, TextField } from '@material-ui/core';\nimport useStyles from './styles';\n\nfunction RightPane(props) {\n  const classes = useStyles();\n  const alphabets = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n\n  const onTextChange = event => {\n    props.onChange(event.target.value);\n  }\n\n  const onButtonPress = letter => {\n    props.onChange(props.value + \"\" + letter);\n  }\n\n  return <div className = {classes.root}>\n    <div className={classes.buttonContainer}>\n      {alphabets.map(alphabet => (\n        <Button\n          key={alphabet}\n          className={classes.pigpenKey}\n          onClick={() => onButtonPress(alphabet)}\n          >\n          {alphabet}\n        </Button>\n      ))}\n    </div>\n    <div className={classes.pigpenTextContainer}>\n      <TextField\n        className={classes.pigpenText}\n        variant=\"outlined\"\n        value={props.value}\n        onChange={onTextChange}\n        InputProps={{\n            classes: {\n              input: classes.pigpenTextInput,\n            },\n          }}\n        fullWidth/>\n    </div>\n  </div>;\n}\n\nexport default RightPane;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   flexGrow: 1,\n },\n title: {\n   flexGrow: 1,\n },\n appBar: {\n   alignItems: 'center'\n }\n}));\n\nexport default useStyles;\n","import AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from './styles';\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Pigpen Crypt\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  \n}));\n\nexport default useStyles;\n","import { withStyles } from '@material-ui/core/styles';\nimport LeftPane from './components/LeftPane';\nimport RightPane from './components/RightPane';\nimport Header from './components/Header';\nimport useStyles from './styles';\nimport {useState} from 'react';\nimport { Grid } from '@material-ui/core';\n\nfunction App() {\n  const classes = useStyles();\n\n  const [text, setText] = useState(\"A QUICK BROWN FOX JUMPS OVER THE LAZY DOG.\");\n\n  const onChange = value => setText(value);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Grid container>\n         <Grid item xs={6}>\n           <LeftPane value={text} onChange={onChange} />\n         </Grid>\n         <Grid item xs={6}>\n           <RightPane value={text} onChange={onChange} />\n         </Grid>\n      </Grid>\n      <div className={classes.content}>\n      </div>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}